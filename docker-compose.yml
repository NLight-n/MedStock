services:
  postgres:
    image: postgres:17
    container_name: medstock-postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - medstock_pgdata:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    networks:
      - medstock_net

  pgadmin:
    image: dpage/pgadmin4
    container_name: medstock-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - medstock_net

  pg_backup:
    image: postgres:17
    container_name: medstock-pg-backup
    depends_on:
      - postgres
    volumes:
      - ./backups:/backups
    entrypoint: [ "sleep", "infinity" ]
    networks:
      - medstock_net

  minio:
    image: minio/minio
    container_name: medstock-minio
    restart: always
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - medstock_net

  web:
    container_name: medstock-web
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - minio
    environment:
      DATABASE_URL: ${DATABASE_URL}
      NODE_ENV: ${NODE_ENV}
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
    env_file:
      - .env
    networks:
      - medstock_net

volumes:
  medstock_pgdata:
  pgadmin_data:
  minio_data:

networks:
  medstock_net:
    driver: bridge
